Выберите класс, для которого напишите документирующие комментарии -  для самого класса,  переменных класса, методов, конструкторов.
Создаем pom.xml файл в проекте с дз.
а) Пишем/изменяем тэги заголовка. Например: groupId  - ваша фамилия, artifactId   - homework.
б) Добавить зависимости – копируем из файла pom.xml flow-control проекта.
в) Добавляем тэг <build>. Указываем в нем где находятся наши сорсы, ресурсы, имя результирующего jar файла.
г) Добавляем плагин:

<plugins>
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
            <source>1.8</source>
            <target>1.8</target>
            <encoding>UTF-8</encoding>
        </configuration>
    </plugin>
 </plugins>
Добавить findbugs-maven-plugin, maven-checkstyle-plugin, maven-pmd-plugin плагин для автоматического нахождения анализа кода в проекте:
<reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.4</version>
            </plugin>
        </plugins>
    </reporting>
Запускаем с помощью mvn site. Ищем отчеты в target/site/project-reports.html и по возможности исправляем.