а) Создать динамический массив, содержащий объекты класса HeavyBox.
б) Раcпечатать его содержимое используя for each.
в) Изменить вес первого ящика на 1.
г) Удалить последний ящик.
д) Получить массив содержащий ящики из коллекции тремя способами и вывести на консоль.
е) Удалить все ящики. (Задание с урока)

Получить массив содержащий ящики из коллекции тремя способами и вывести на консоль. (Задание с урока)

Создать TreeSet содержащий HeavyBox. HeavyBox должен реализовать интерфейс Comparable. Распечатать содержимое с помощью for each. (Задание с урока)

Напишите методы union(Set<?>... set) и intersect(Set<?> ... set), реализующих операции объединения и пересечения множеств. Протестируйте работу этих методов на предварительно заполненных множествах.

Пользователь вводит набор чисел в виде одной строки "1, 2, 3, 4, 4, 5". Избавиться от повторяющихся элементов в строке и вывести результат на экран.

Создать класс Товар, имеющий переменные имя, цена, рейтинг. Создать класс Категория, имеющий переменные имя и множество товаров. Создать несколько объектов класса Категория. Создать метод, распечатывающий товары каталога, отсортированные по имени, цене или рейтингу. Используем классы компараторы для каждого вида сортировки.

Создать очередь, содержащую объекты класса HeavyBox. Используем класс ArrayDeque. Поместить объекты в очередь с помощью метода offer(). Удалить объекты методом poll().  (Задание с урока)

Создать коллекцию, содержащую объекты HeavyBox. Написать метод, который перебирает элементы коллекции и проверяет вес коробок. Если вес коробки больше 300 гр, коробка перемещается в другую коллекцию. (Задание с урока)

Создайте HashMap, содержащий пары значений  - имя игрушки и объект игрушки (класс Toy).
Перебрать и распечатать пары значений - entrySet().
Перебрать и распечатать набор из имен игрушек  - keySet().
Перебрать и распечатать значения игрушек - values().
Для каждого перебора создать свой метод. (Задание с урока)

Создать класс Student, содержащий следующие характеристики – имя, группа, курс, оценки по предметам. Создать коллекцию, содержащую объекты класса Student. Перебрать всех студентов, вычислить средний балл каждого студента. Если средний балл >=3, студент переводится на следующий курс, иначе отчисляется. Напишите метод printStudents(List students, int course), который получает список студентов и номер курса и печатает на консоль имена тех студентов из списка, которые обучаются на данном курсе. Для обхода списка в этом методе используйте итератор.

Cоздайте класс Pet и его наследников Cat, Dog, Parrot. Создайте отображение из домашних животных, где в качестве ключа выступает имя животного, а в качестве значения класс Pet. Добавьте в отображение разных животных. Создайте метод выводящий на консоль все все ключи отображения.


Переделать задание 8, используя TreeMap.

Переделать задание 4 (класс Товар),  используя Collections.sort() для сортировки. Добавить возможность сортировать в обратном порядке (Collections.reverse()).

Collections Framework - вопросы и задания

Интерфейс List и Реализации - вопросы и задания

Интерфейс Set и Реализации - вопросы и задания

Интерфейс Queue и Реализации - вопросы и задания

Отображения Map - вопросы и задания

Алгоритмы коллекций - вопросы и задания

Унаследованные коллекции - вопросы и задания